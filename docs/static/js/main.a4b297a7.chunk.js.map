{"version":3,"sources":["ListTable.js","scheduler.js","ScheduleTable.js","App.js","theme.js","index.js"],"names":["columns","id","label","minWidth","useStyles","makeStyles","root","width","container","minHeight","ListTable","props","items","classes","name","rows","handleRemoveItem","map","item","Paper","className","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","align","style","TableBody","row","IconButton","margin","onClick","value","require","difference","sample","_buildTeamMap","teams","teamMap","team","filter","t","generateSchedule","dates","length","Error","_performValidations","schedule","_teamMap","date","_retryCount","_alreadyScheduled","team1","team2","push","match","t1","t2","table","header","backgroundColor","subheader","ScheduleTable","data","gameDate","field","time","forEach","idx","gaemDate","createData","Typography","component","colSpan","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","palette","secondary","main","form","textfield","submit","download","reset","example","DEFAULT_TEAMS","DEFAULT_DATES","App","useState","setTeams","setDates","teamName","setTeamName","setGameDate","setSchedule","invokeScheduler","e","alert","message","d","handleAddItem","tmp","currentTarget","handleTextFieldChange","target","Container","maxWidth","CssBaseline","Avatar","variant","Grid","xs","sm","textAlign","Button","color","csv","querySelectorAll","slice","call","cells","cell","textContent","join","toCsv","document","getElementById","link","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","disabled","TextField","size","onChange","onKeyDown","code","fullWidth","createMuiTheme","primary","error","red","A400","background","default","ReactDOM","render","ThemeProvider","querySelector"],"mappings":"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","file":"static/js/main.a4b297a7.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nconst columns = [\n  { id: 'name', label: 'name', minWidth: 190 },\n  { id: 'deleteme', label: '', minWidth: 80 }\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  container: {\n    minHeight: 200,\n  },\n});\n\nfunction createData(items) {\n  if (items) {\n    return items.map(item => {\n      return { name: item }\n    });\n  } else {\n    return [];\n  }\n}\n\nexport default function ListTable(props) {\n  const classes = useStyles();\n  let { name, rows, handleRemoveItem } = props;\n\n  rows = createData(rows);\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                  <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {props[column.label]}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => {\n              return (\n                <TableRow key={row.name}>\n                  {columns.map((column) => {\n                    if (column.id === 'deleteme') {\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          <IconButton id={`${name}-${row.name}`} aria-label=\"delete\" className={classes.margin} onClick={() => handleRemoveItem(name, row.name)}>\n                            <DeleteIcon />\n                          </IconButton>\n                        </TableCell>\n                      );\n                    } else {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {value}\n                        </TableCell>\n                      );\n                    }\n                  })}\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Paper>\n  );\n}\n","const { difference, sample } = require('lodash');\n\n// Every coach has to play at every game\n// Every coach has to play every other coach at least once\n// Minimize the number of times teams play each other\n\nfunction _buildTeamMap(teams) {\n  let teamMap = {}\n  for (let team of teams) {\n    teamMap[team] = teams.filter(t => t!== team)\n  }\n  return teamMap;\n}\n\nfunction _performValidations(teams, dates) {\n  if (!teams || !dates || teams.length == 0 || dates.length == 0) {\n    throw new Error('Please provide a list of teams and a list of dates');\n  }\n  if (teams.length % 2 !== 0) {\n    throw new Error('There must be an even number of teams for this to work!')\n  }\n}\n\nexport default function generateSchedule(teams, dates) {\n\n  _performValidations(teams, dates);\n\n  let schedule = {};\n  let _teamMap = _buildTeamMap(teams);\n\n  for (let date of dates) {\n    // console.log(`Scheduling ${date}`);\n\n    let _retryCount = 0;\n    let _alreadyScheduled = [];\n    schedule[date] = [];\n\n    // After every team combination has been scheduled, and there are still\n    // game dates to fill, we can allow teams to play each other again\n    if (_teamMap[teams[0]].length === 0) {\n      _teamMap = _buildTeamMap(teams);\n    }\n\n    while (_alreadyScheduled.length < teams.length) {\n      let team1, team2;\n      // Get a random team from the list of all teams minus any\n      // already schedule for this game day\n      team1 = sample(difference(teams, _alreadyScheduled));\n      // Get a second random team from the list of all teams\n      // the first team hasn't played yet\n      team2 = sample(difference(_teamMap[team1], _alreadyScheduled));\n\n      // Sometimes the shifting combos for a given day will result in a\n      // team that can't be matched. Start the day over. If we have started\n      // the day over a bunch of times and aren't able to find a good\n      // schedule, start the whole process over.\n      if (!team1 || !team2) {\n        if (++_retryCount > 200) {\n          return generateSchedule(teams, dates);\n        }\n        schedule[date] = [];\n        _alreadyScheduled = [];\n        continue;\n      }\n\n      // Add this pair to the schedule and log in the tmp array\n      // of already scheduled games this day\n      schedule[date].push([team1, team2]);\n      _alreadyScheduled.push(team1, team2);\n    }\n\n    // After finalizing the day's matches, remove the scheduled match\n    // from each teams list of available subsequent matches\n    for (let match of schedule[date]) {\n      let t1 = match[0];\n      let t2 = match[1];\n      _teamMap[t1] = _teamMap[t1].filter(t => t !== t2);\n      _teamMap[t2] = _teamMap[t2].filter(t => t !== t1);\n    }\n  }\n\n  return schedule;\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n    minHeight: 200\n  },\n  header: {\n    backgroundColor: '#cecece'\n  },\n  subheader: {\n    backgroundColor: '#b9b9ff'\n  }\n});\n\nfunction createData(schedule) {\n  let data = [];\n  for (let date in schedule) {\n    // Row with just the game date\n    data.push({\n      name: date,\n      gameDate: date,\n      teams: null,\n      field: null,\n      time: null\n    });\n    // Rows with all the matches\n    schedule[date].forEach((match, idx) => {\n      data.push({\n        name: `${date}-${idx}`,\n        gaemDate: null,\n        team1: match[0],\n        team2: match[1],\n        field: null,\n        time: null\n      });\n    });\n  }\n  return data;\n}\n\n\nexport default function ScheduleTable(props) {\n  const classes = useStyles();\n  const { schedule } = props;\n  const rows = createData(schedule);\n\n  return (\n    schedule.length === 0\n      ? <Typography component=\"p\">\n        Generated Schedule Will Show Up Here\n      </Typography>\n      :\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\" id=\"exportMe\">\n        <TableHead>\n          <TableRow className={classes.header}>\n            <TableCell>Team 1</TableCell>\n            <TableCell>Team 2</TableCell>\n            <TableCell>Field</TableCell>\n            <TableCell>Time</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => {\n            if (row.gameDate) {\n              return (\n                <TableRow key={row.name} className={classes.subheader}>\n                  <TableCell colSpan={4}>{row.gameDate}</TableCell>\n                </TableRow>\n              )\n            } else {\n              return (\n                <TableRow key={row.name}>\n                  <TableCell>{row.team1}</TableCell>\n                  <TableCell>{row.team2}</TableCell>\n                  <TableCell>{row.field}</TableCell>\n                  <TableCell>{row.time}</TableCell>\n                </TableRow>\n              )\n            }\n\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport ListTable from './ListTable';\nimport generateSchedule from './scheduler';\nimport ScheduleTable from './ScheduleTable';\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(5),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n  },\n  textfield: {\n    width: '86%'\n  },\n  submit: {\n    margin: theme.spacing(0, 1),\n    width: '30%'\n  },\n  download: {\n    margin: theme.spacing(0, 1),\n    width: '20%'\n  },\n  reset: {\n    margin: theme.spacing(0, 1),\n    width: '20%',\n    backgroundColor: '#f39a9a'\n  },\n  example: {\n    margin: theme.spacing(0, 1),\n    width: '20%'\n  }\n}));\n\nconst DEFAULT_TEAMS = [\n  'Awesome Possums',\n  'Totally Tacos',\n  'Power Pidgeons',\n  'Kickin Kiddos',\n  'Coach Payne',\n  'Dream Team',\n  'Mandalorian Pizza',\n  'Team Awesome'\n]\n\nconst DEFAULT_DATES = [\n  'game-1',\n  'May 7',\n  'game-2',\n  'Groundhog Day',\n  'game-3',\n  'game-4',\n  'game-5',\n  'Last Game'\n]\n\nexport default function App() {\n  const classes = useStyles();\n\n  const [teams, setTeams] = useState([]);\n  const [dates, setDates] = useState([]);\n  const [teamName, setTeamName] = useState('');\n  const [gameDate, setGameDate] = useState('');\n  const [schedule, setSchedule] = useState([]);\n\n\n  function handleClearAll() {\n    setTeams([]);\n    setDates([]);\n    setSchedule([]);\n    setTeamName('');\n    setGameDate('');\n  }\n\n  function handleShowExample() {\n    setTeams(DEFAULT_TEAMS);\n    setDates(DEFAULT_DATES);\n    invokeScheduler(DEFAULT_TEAMS, DEFAULT_DATES);\n  }\n\n  function handleGenerateSchedule() {\n    invokeScheduler(teams, dates);\n  }\n\n  function invokeScheduler(teams, dates) {\n    try {\n      const schedule = generateSchedule(teams, dates);\n      setSchedule(schedule);\n    } catch (e) {\n      alert(e.message);\n    }\n  }\n\n  function handleRemoveItem(name, item) {\n    if (name === 'Teams') {\n      setTeams(teams.filter(t => t !== item));\n    } else if (name === 'Dates') {\n      setDates(dates.filter(d => d !== item));\n    }\n  }\n\n  function handleAddItem(e) {\n    let tmp;\n    if (e.currentTarget.id === 'addTeam') {\n      tmp = teams.filter(t => t !== teamName);\n      tmp.push(teamName);\n      setTeams(tmp);\n      setTeamName('');\n    } else if (e.currentTarget.id === 'addDate') {\n      tmp = dates.filter(d => d !== gameDate);\n      tmp.push(gameDate);\n      setDates(tmp);\n      setGameDate('');\n    }\n  }\n\n  function handleTextFieldChange(e) {\n    if (e.currentTarget.id === 'teamName') {\n      setTeamName(e.target.value);\n    } else if (e.currentTarget.id === 'gameDate') {\n      setGameDate(e.target.value);\n    }\n  }\n\n  function toCsv(table) {\n    // Query all rows\n    const rows = table.querySelectorAll('tr');\n\n    return [].slice.call(rows)\n        .map(function(row) {\n            // Query all cells\n            const cells = row.querySelectorAll('th,td');\n            return [].slice.call(cells)\n                .map(function(cell) {\n                    return cell.textContent;\n                })\n                .join(',');\n        })\n        .join('\\n');\n  };\n\n  function handleDownload() {\n\n    if (schedule.length === 0) {\n      alert('There is nothing to download yet.');\n      return;\n    }\n\n    const table = document.getElementById('exportMe');\n    const csv = toCsv(table);\n    const link = document.createElement('a');\n    link.setAttribute('href', `data:text/csv;charset=utf-8,${encodeURIComponent(csv)}`);\n    link.setAttribute('download', 'schedule.csv');\n\n    link.style.display = 'none';\n    document.body.appendChild(link);\n\n    link.click();\n\n    document.body.removeChild(link);\n  };\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <EventNoteIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Create a Game Schedule\n        </Typography>\n        <Typography component=\"p\">\n          This tool generates a random collection of matches that ensures that each team plays on every game day, that each team plays every other team, and that each team plays the minimum number of repeat matches.<br /><br />\n          Step 1: Enter all team names (there have to be an even number of teams)<br />\n          Step 2: Enter all game dates as text<br />\n          Step 3: Click the \"Generate Schedule\" button. The created schedule is shown at the bottom of the page.<br />\n          Step 4: If desired, click the \"Generate Schedule\" button again to re-generate a different random schedule.<br />\n          Step 5: Click the \"Download CSV\" button to download the generated schedule as a CSV file\n        </Typography>\n        <div className={classes.paper}>\n          <Grid container spacing={2}>\n          <Grid item xs={12} sm={12} style={{textAlign: \"center\"}}>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.submit}\n                onClick={handleGenerateSchedule}\n              >\n                Generate Schedule\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.download}\n                onClick={handleDownload}\n                disabled={schedule.length===0}\n              >\n                Download CSV\n              </Button>\n              <Button\n                variant=\"contained\"\n                className={classes.reset}\n                onClick={handleClearAll}\n              >\n                Clear All\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"default\"\n                className={classes.example}\n                onClick={handleShowExample}\n              >\n                Show Example\n              </Button>\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              <ScheduleTable schedule={schedule} className={classes.form} />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                className={classes.textfield}\n                name=\"teamName\"\n                variant=\"outlined\"\n                id=\"teamName\"\n                label=\"Add Team\"\n                size=\"small\"\n                onChange={handleTextFieldChange}\n                onKeyDown={(e) => {\n                  if (e.code == 'Enter') {\n                    e.currentTarget.id = 'addTeam';\n                    handleAddItem(e);\n                  }\n                }}\n                value={teamName}\n                />\n              <IconButton id=\"addTeam\" aria-label=\"add\" className={classes.margin} onClick={handleAddItem}>\n                <AddIcon />\n              </IconButton>\n              <ListTable name=\"Teams\" rows={teams} handleRemoveItem={handleRemoveItem} />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                className={classes.textfield}\n                name=\"gameDate\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"gameDate\"\n                label=\"Add Game Date\"\n                size=\"small\"\n                onChange={handleTextFieldChange}\n                onKeyDown={(e) => {\n                  e.currentTarget.id = 'addDate';\n                  if (e.code == 'Enter') {\n                    handleAddItem(e);\n                  }\n                }}\n                value={gameDate}\n              />\n              <IconButton id=\"addDate\" aria-label=\"add\" className={classes.margin} onClick={handleAddItem}>\n                <AddIcon />\n              </IconButton>\n              <ListTable name=\"Games\" rows={dates} handleRemoveItem={handleRemoveItem} />\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n    </Container>\n  );\n}","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}